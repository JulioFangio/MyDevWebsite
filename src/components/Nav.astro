---
---

<nav class="fixed top-0 left-0 right-0 z-50 bg-[var(--background)]/80 backdrop-blur-md border-b border-[var(--white-icon-tr)]">
  <div class="max-w-6xl mx-auto px-6 md:px-12 lg:px-20">
    <div class="flex items-center justify-between h-16">
      <!-- Logo/Name -->
      <a href="#home" class="text-xl font-semibold text-[var(--white)] hover:text-[var(--sec)] transition-colors">
        Jules Duval
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        <a href="#home" class="nav-link text-[var(--white-icon)] hover:text-[var(--sec)] transition-colors font-medium">
          Home
        </a>
        <a href="#about" class="nav-link text-[var(--white-icon)] hover:text-[var(--sec)] transition-colors font-medium">
          About
        </a>
        <a href="#projects" class="nav-link text-[var(--white-icon)] hover:text-[var(--sec)] transition-colors font-medium">
          Projects
        </a>
        
        <!-- Language Switcher -->
        <div class="flex items-center space-x-2 ml-4 pl-4 border-l border-[var(--white-icon-tr)]">
          <button id="lang-en" class="lang-btn text-[var(--sec)] font-medium px-2 py-1 rounded transition-colors">
            EN
          </button>
          <span class="text-[var(--white-icon)]">|</span>
          <button id="lang-fr" class="lang-btn text-[var(--white-icon)] hover:text-[var(--sec)] font-medium px-2 py-1 rounded transition-colors">
            FR
          </button>
        </div>
      </div>
      
      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden flex items-center justify-center w-10 h-10 text-[var(--white-icon)] hover:text-[var(--sec)] transition-colors"
        aria-label="Toggle mobile menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
    
    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden border-t border-[var(--white-icon-tr)] mt-2 py-4">
      <div class="flex flex-col space-y-4">
        <a href="#home" class="nav-link text-[var(--white-icon)] hover:text-[var(--sec)] transition-colors font-medium">
          Home
        </a>
        <a href="#about" class="nav-link text-[var(--white-icon)] hover:text-[var(--sec)] transition-colors font-medium">
          About
        </a>
        <a href="#projects" class="nav-link text-[var(--white-icon)] hover:text-[var(--sec)] transition-colors font-medium">
          Projects
        </a>
        
        <!-- Mobile Language Switcher -->
        <div class="flex items-center space-x-2 pt-2 border-t border-[var(--white-icon-tr)]">
          <span class="text-[var(--white-icon)] text-sm">Language:</span>
          <button id="lang-en-mobile" class="lang-btn text-[var(--sec)] font-medium px-2 py-1 rounded transition-colors">
            EN
          </button>
          <span class="text-[var(--white-icon)]">|</span>
          <button id="lang-fr-mobile" class="lang-btn text-[var(--white-icon)] hover:text-[var(--sec)] font-medium px-2 py-1 rounded transition-colors">
            FR
          </button>
        </div>
      </div>
    </div>
  </div>
</nav>

<!-- Spacer to prevent content from being hidden behind fixed navbar -->
<div class="h-16"></div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        mobileMenu.classList.toggle('hidden');
      });
    }
    
    // Language management
    let currentLang = 'en'; // Default language
    
    // Language switcher buttons
    const langEnBtn = document.getElementById('lang-en');
    const langFrBtn = document.getElementById('lang-fr');
    const langEnMobileBtn = document.getElementById('lang-en-mobile');
    const langFrMobileBtn = document.getElementById('lang-fr-mobile');
    
    function updateLanguageButtons() {
      const allBtns = [langEnBtn, langFrBtn, langEnMobileBtn, langFrMobileBtn];
      allBtns.forEach(btn => {
        if (btn) {
          btn.classList.remove('text-[var(--sec)]');
          btn.classList.add('text-[var(--white-icon)]');
        }
      });
      
      if (currentLang === 'en') {
        if (langEnBtn) {
          langEnBtn.classList.remove('text-[var(--white-icon)]');
          langEnBtn.classList.add('text-[var(--sec)]');
        }
        if (langEnMobileBtn) {
          langEnMobileBtn.classList.remove('text-[var(--white-icon)]');
          langEnMobileBtn.classList.add('text-[var(--sec)]');
        }
      } else {
        if (langFrBtn) {
          langFrBtn.classList.remove('text-[var(--white-icon)]');
          langFrBtn.classList.add('text-[var(--sec)]');
        }
        if (langFrMobileBtn) {
          langFrMobileBtn.classList.remove('text-[var(--white-icon)]');
          langFrMobileBtn.classList.add('text-[var(--sec)]');
        }
      }
    }
    
    function switchLanguage(lang) {
      currentLang = lang;
      updateLanguageButtons();
      
      // For now, just show an alert. Later this will load different components
      if (lang === 'fr') {
        // Here you would load the French version
        window.location.href = '/fr/';
      } else {
        // Here you would load the English version
        window.location.href = '/';
      }
    }
    
    // Add event listeners for language buttons
    if (langEnBtn) langEnBtn.addEventListener('click', () => switchLanguage('en'));
    if (langFrBtn) langFrBtn.addEventListener('click', () => switchLanguage('fr'));
    if (langEnMobileBtn) langEnMobileBtn.addEventListener('click', () => switchLanguage('en'));
    if (langFrMobileBtn) langFrMobileBtn.addEventListener('click', () => switchLanguage('fr'));
    
    // Smooth scrolling for navigation links
    const navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        
        const targetId = (e.target as HTMLElement).getAttribute('href');
        const targetSection = document.querySelector(targetId || '');
        
        if (targetSection) {
          const offsetTop = targetSection.getBoundingClientRect().top + window.pageYOffset - 80;
          
          window.scrollTo({
            top: offsetTop,
            behavior: 'smooth'
          });
          
          // Close mobile menu if open
          if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.add('hidden');
          }
        }
      });
    });
    
    // Highlight active section on scroll
    function updateActiveNavLink() {
      const sections = ['home', 'about', 'projects'];
      let currentSection = '';
      
      sections.forEach(sectionId => {
        const section = document.getElementById(sectionId);
        if (section) {
          const rect = section.getBoundingClientRect();
          if (rect.top <= 100 && rect.bottom >= 100) {
            currentSection = sectionId;
          }
        }
      });
      
      // Update active link styling
      navLinks.forEach(link => {
        const href = link.getAttribute('href');
        if (href === `#${currentSection}`) {
          link.classList.add('text-[var(--sec)]');
          link.classList.remove('text-[var(--white-icon)]');
        } else {
          link.classList.remove('text-[var(--sec)]');
          link.classList.add('text-[var(--white-icon)]');
        }
      });
    }
    
    // Listen for scroll events
    window.addEventListener('scroll', updateActiveNavLink);
    
    // Initial calls
    updateActiveNavLink();
    updateLanguageButtons();
  });
</script>

<style>
  /* Additional styles for better mobile menu animation */
  #mobile-menu {
    transition: all 0.3s ease-in-out;
  }
  
  /* Smooth scroll behavior */
  html {
    scroll-behavior: smooth;
  }
</style>